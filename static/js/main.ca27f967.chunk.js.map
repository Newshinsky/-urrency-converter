{"version":3,"sources":["component/converter/Converter.module.css","component/header/Header.module.css","component/mainExchangeRateContainer/MainExchangeRateContainer.module.css","component/currentExchangeRate/OtherExchangeRate.module.css","reducers/converterReducer.tsx","component/converter/Converter.tsx","component/converter/ConverterContainer.tsx","component/currentExchangeRate/OtherExchangeRate.tsx","img/exchange-svgrepo-com.svg","component/header/Header.tsx","component/mainExchangeRateContainer/MainExchangeRate.tsx","component/mainExchangeRateContainer/MainExchangeRateContainer.tsx","App.tsx","api/apiData.tsx","reportWebVitals.ts","store.tsx","index.tsx"],"names":["module","exports","SET_CURRENT_COURSE","SET_IS_FETCHING","initialState","data","Cur_ID","Date","Cur_Abbreviation","Cur_Scale","Cur_Name","Cur_OfficialRate","isFetching","setIsFetchingAC","type","payload","Converter","props","currExachangeRate","useState","fromExchange","setFromExchange","currencyData","find","e","value","className","s","converterInfoWrapper","fromNum","onChange","HandleFrom","selectWrapper","options","currAbbreviations","defaultInputValue","placeholder","theme","borderRadius","colors","primary25","primary","toFixed","disabled","ConverterContainer","setFromNum","OtherExchangeRate","filterCurrencyData","filter","date","month","getMonth","day","getDate","year","getFullYear","OtherExchangeRateWrapper","map","i","CourseItem","valueName","currency","width","valueInfo","valueRate","Header","src","exchangeImg","height","alt","Logo","MainExchangeRate","MainExchangeRateWrapper","ExchangeItemInfo","exchangeInfo","ExchangeItemRate","MainExchangeRateContainer","USDExchangeRate","EURExchangeRate","RUBExchangeRate","App","dispatch","useDispatch","useEffect","a","axios","get","response","useSelector","state","converter","label","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca27f967.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"converterInfoWrapper\":\"Converter_converterInfoWrapper__3iLzP\",\"selectWrapper\":\"Converter_selectWrapper__3DyMR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Header_Logo__2pMqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainExchangeRateContainer\":\"MainExchangeRateContainer_MainExchangeRateContainer__3vOHv\",\"MainExchangeRateWrapper\":\"MainExchangeRateContainer_MainExchangeRateWrapper__2Klii\",\"ExchangeItemInfo\":\"MainExchangeRateContainer_ExchangeItemInfo__1f7nL\",\"ExchangeItemRate\":\"MainExchangeRateContainer_ExchangeItemRate__2C4pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CourseItem\":\"OtherExchangeRate_CourseItem__CPWDS\",\"valueName\":\"OtherExchangeRate_valueName__1_r8S\",\"valueInfo\":\"OtherExchangeRate_valueInfo__3jzyM\",\"valueRate\":\"OtherExchangeRate_valueRate__3Ae5A\",\"OtherExchangeRateWrapper\":\"OtherExchangeRate_OtherExchangeRateWrapper__1IIlW\"};","import { ActionType } from \"../App\"\r\n\r\n\r\n\r\nconst SET_CURRENT_COURSE = \"SET_CURRENT_COURSE\"\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\"\r\n\r\nexport type CourseType = {\r\n    Cur_ID: number,\r\n    Date: string,\r\n    Cur_Abbreviation: string,\r\n    Cur_Scale: number,\r\n    Cur_Name: string,\r\n    Cur_OfficialRate: number\r\n}\r\n\r\nconst initialState = {\r\n    data: [{\r\n        Cur_ID: 431,\r\n        Date: \"2021-12-28T00:00:00\",\r\n        Cur_Abbreviation: \"USD\",\r\n        Cur_Scale: 1,\r\n        Cur_Name: \"Доллар США\",\r\n        Cur_OfficialRate: 2.4226\r\n    }, {\r\n        Cur_Abbreviation: \"EUR\",\r\n        Cur_ID: 451,\r\n        Cur_Name: \"Евро\",\r\n        Cur_OfficialRate: 2.8233,\r\n        Cur_Scale: 1,\r\n        Date: \"2021-12-28T00:00:00\",\r\n    }, {\r\n        Cur_Abbreviation: \"RUB\",\r\n        Cur_ID: 456,\r\n        Cur_Name: \"Российских рублей\",\r\n        Cur_OfficialRate: 3.4363,\r\n        Cur_Scale: 100,\r\n        Date: \"2021-12-28T00:00:00\",\r\n    },\r\n    {\r\n        Cur_Abbreviation: \"UAH\",\r\n        Cur_ID: 449,\r\n        Cur_Name: \"Гривен\",\r\n        Cur_OfficialRate: 9.2263,\r\n        Cur_Scale: 100,\r\n        Date: \"2021-12-28T00:00:00\",\r\n    }],\r\n    isFetching: false\r\n}\r\n\r\nexport type StateType = {\r\n    data: Array<CourseType>\r\n    isFetching: boolean\r\n}\r\n\r\n\r\nexport function converterReducer(state: StateType = initialState, action: ActionType) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_COURSE:\r\n            return { ...state, data: action.payload }\r\n        case SET_IS_FETCHING:\r\n            return { ...state, isFetching: action.payload }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setCurrentCourseAC = (data: any) => {\r\n    return ({\r\n        type: SET_CURRENT_COURSE,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const setIsFetchingAC = (isFetching: boolean) => {\r\n    return ({\r\n        type: SET_IS_FETCHING,\r\n        payload: isFetching\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport Select from 'react-select';\r\nimport { CourseType } from \"../../reducers/converterReducer\";\r\nimport s from \"./Converter.module.css\";\r\n\r\nexport type currAbbreviation = {\r\n    value: string,\r\n    label: string\r\n}\r\n\r\ntype propsType = {\r\n    currencyData: Array<CourseType>,\r\n    isFetching: boolean,\r\n    currAbbreviations: Array<currAbbreviation>\r\n    HandleFrom: (e: ChangeEvent<HTMLInputElement>) => void\r\n    fromNum: number,\r\n    setFromNum: (num: string) => void\r\n}\r\n\r\nexport const Converter = (props: propsType) => {\r\n\r\n    const [fromExchange, setFromExchange] = useState<any>();\r\n    let currExachangeRate\r\n    if (!fromExchange) {\r\n        currExachangeRate = 1\r\n    } else {\r\n        currExachangeRate = props.currencyData.find(e => fromExchange.value === e.Cur_Abbreviation)!.Cur_OfficialRate\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.converterInfoWrapper}>\r\n            <div>\r\n                <h3> Amount </h3>\r\n                <input type=\"number\"\r\n                    value={props.fromNum}\r\n                    onChange={props.HandleFrom}\r\n                />\r\n            </div>\r\n            <div className={s.selectWrapper}>\r\n                <h3> From </h3>\r\n                <Select\r\n                    options={props.currAbbreviations}\r\n                    defaultInputValue={fromExchange}\r\n                    onChange={setFromExchange}\r\n                    placeholder={'Choose default value'}\r\n                    theme={(theme) => ({\r\n                        ...theme,\r\n                        borderRadius: 10,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            primary25: 'hotpink',\r\n                            primary: 'black',\r\n                        },\r\n                    })}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3> To BYN </h3>\r\n                <input type=\"number\"\r\n                    value={(props.fromNum * currExachangeRate).toFixed(2)}\r\n                    disabled\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { ChangeEvent } from \"react\"\r\nimport { CourseType } from \"../../reducers/converterReducer\"\r\nimport { Converter, currAbbreviation } from \"./Converter\"\r\n\r\n\r\ntype PropsType = {\r\n    currencyData: Array<CourseType>,\r\n    isFetching: boolean,\r\n    currAbbreviations: Array<currAbbreviation>\r\n    HandleFrom: (e: ChangeEvent<HTMLInputElement>) => void\r\n    fromNum: number,\r\n    setFromNum: (num: string) => void\r\n}\r\n\r\n\r\n\r\n\r\nexport function ConverterContainer(props: PropsType) {\r\n\r\n    return (\r\n        <div className=\"wrapper\" >\r\n            <Converter\r\n                currencyData={props.currencyData}\r\n                isFetching={props.isFetching}\r\n                currAbbreviations={props.currAbbreviations}\r\n                HandleFrom={props.HandleFrom}\r\n                fromNum={props.fromNum}\r\n                setFromNum={props.setFromNum}\r\n            />\r\n        </div>\r\n    )\r\n}","import CurrencyFlag from 'react-currency-flags'\r\nimport { CourseType } from \"../../reducers/converterReducer\"\r\nimport s from \"./OtherExchangeRate.module.css\"\r\n\r\n\r\ntype PropsType = {\r\n    currencyData: Array<CourseType>,\r\n}\r\n\r\nexport const OtherExchangeRate = (props: PropsType) => {\r\n\r\n    const filterCurrencyData = props.currencyData.filter(e =>\r\n        e.Cur_Abbreviation !== \"XDR\" &&\r\n        e.Cur_Abbreviation !== \"USD\" &&\r\n        e.Cur_Abbreviation !== \"EUR\" &&\r\n        e.Cur_Abbreviation !== \"RUB\"\r\n    )\r\n\r\n    const date = new Date(filterCurrencyData[0].Date)\r\n    const month = date.getMonth()\r\n    const day = date.getDate()\r\n    const year = date.getFullYear()\r\n\r\n\r\n    return (\r\n        <div className={s.OtherExchangeRateWrapper}>\r\n            <div className=\"wrapper\" >\r\n                <div>\r\n                    <h3>\r\n                        The official exchange rate of\r\n                        the Belarusian ruble against\r\n                        foreign currencies\r\n                    </h3>\r\n                    <h5> Date {day}.{month + 1}.{year} </h5>\r\n                    {filterCurrencyData.map(\r\n                        (e, i) => {\r\n                            return (\r\n                                <div className={s.CourseItem} key={i}>\r\n                                    <span className={s.valueName}>\r\n                                        <span >  <CurrencyFlag currency={e.Cur_Abbreviation} width={20} />\r\n                                        </span> {e.Cur_Name}\r\n                                    </span>\r\n                                    <span className={s.valueInfo}>\r\n                                        {e.Cur_Scale} {e.Cur_Abbreviation}\r\n                                    </span>\r\n                                    <span className={s.valueRate}>\r\n                                        {e.Cur_OfficialRate}\r\n                                    </span>\r\n                                </div >\r\n                            )\r\n                        }\r\n                    )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/exchange-svgrepo-com.6261f324.svg\";","\r\nimport { ConverterContainer } from \"../converter/ConverterContainer\"\r\nimport exchangeImg from \"./../../img/exchange-svgrepo-com.svg\"\r\nimport s from \"./Header.module.css\"\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"wrapper\">\r\n            <div className=\"container\">\r\n                <img src={exchangeImg} width=\"100\" height=\"95\" alt=\"Currency Converter\" />\r\n                <h1 className={s.Logo}>\r\n                    Currency Converter\r\n                </h1>\r\n            </div>\r\n     \r\n        </header>\r\n    )\r\n}","\r\nimport CurrencyFlag from 'react-currency-flags'\r\nimport { CourseType } from \"../../reducers/converterReducer\"\r\nimport s from \"./MainExchangeRateContainer.module.css\"\r\n\r\ntype PropsType = {\r\n    exchangeInfo: CourseType\r\n}\r\n\r\nexport const MainExchangeRate = (props: PropsType) => {\r\n\r\n\r\n    return (\r\n        <div className={s.MainExchangeRateWrapper}>\r\n            <div className={s.ExchangeItemInfo}>\r\n                <span>\r\n                    <CurrencyFlag currency={props.exchangeInfo.Cur_Abbreviation} width={70} />\r\n                </span>\r\n                <span>\r\n                    <h3>\r\n                        {props.exchangeInfo.Cur_Scale} {props.exchangeInfo.Cur_Abbreviation}\r\n                    </h3>\r\n                </span>\r\n            </div>\r\n            <div className={s.ExchangeItemRate}>\r\n                <h3>\r\n                    {props.exchangeInfo.Cur_OfficialRate}\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { CourseType } from \"../../reducers/converterReducer\"\r\nimport { MainExchangeRate } from \"./MainExchangeRate\"\r\nimport s from \"./MainExchangeRateContainer.module.css\"\r\n\r\ntype PropsType = {\r\n    currencyData: Array<CourseType>,\r\n}\r\n\r\n\r\nexport const MainExchangeRateContainer = (props: PropsType) => {\r\n\r\n\r\n    const USDExchangeRate = props.currencyData.find(e => e.Cur_Abbreviation === \"USD\")\r\n    const EURExchangeRate = props.currencyData.find(e => e.Cur_Abbreviation === \"EUR\")\r\n    const RUBExchangeRate = props.currencyData.find(e => e.Cur_Abbreviation === \"RUB\")\r\n\r\n\r\n    return (\r\n        <div className={s.MainExchangeRateContainer}>\r\n            <MainExchangeRate exchangeInfo={USDExchangeRate!} />\r\n            <MainExchangeRate exchangeInfo={EURExchangeRate!} />\r\n            <MainExchangeRate exchangeInfo={RUBExchangeRate!} />\r\n        </div>\r\n\r\n    )\r\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getGlobalData } from './api/apiData';\nimport './App.css';\nimport { ConverterContainer } from './component/converter/ConverterContainer';\nimport { OtherExchangeRate } from './component/currentExchangeRate/OtherExchangeRate';\nimport { Header } from './component/header/Header';\nimport { MainExchangeRateContainer } from './component/mainExchangeRateContainer/MainExchangeRateContainer';\nimport { CourseType, setCurrentCourseAC, setIsFetchingAC } from './reducers/converterReducer';\nimport { RootStoreType } from './store';\n\n\nexport type ActionType =\n  ReturnType<typeof setCurrentCourseAC> |\n  ReturnType<typeof setIsFetchingAC>\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getGlobalData())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const currencyData = useSelector<RootStoreType, Array<CourseType>>(state => state.converter.data)\n  const isFetching = useSelector<RootStoreType, boolean>(state => state.converter.isFetching)\n  const currAbbreviations = currencyData.map(e => { return { value: e.Cur_Abbreviation, label: e.Cur_Abbreviation } })\n  const [fromNum, setFromNum] = useState<any>(0)\n\n\n  function HandleFrom(e: ChangeEvent<HTMLInputElement>) {\n    setFromNum(e.currentTarget.value)\n  }\n\n  if (isFetching) {\n    return (\n      <div>\n        ...Waitng\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Header />\n      <ConverterContainer\n        currencyData={currencyData}\n        isFetching={isFetching}\n        currAbbreviations={currAbbreviations}\n        HandleFrom={HandleFrom}\n        fromNum={fromNum}\n        setFromNum={setFromNum}\n      />\n      <MainExchangeRateContainer\n        currencyData={currencyData} />\n      <OtherExchangeRate\n        currencyData={currencyData} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\"\r\nimport { Dispatch } from \"react\"\r\nimport { ActionType } from \"../App\"\r\n\r\nimport { setCurrentCourseAC, setIsFetchingAC } from \"../reducers/converterReducer\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getGlobalData = () => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(setIsFetchingAC(false))\r\n        const response = await axios.get(\"https://www.nbrb.by/api/exrates/rates?periodicity=0\")\r\n        dispatch(setCurrentCourseAC(response.data))\r\n        dispatch(setIsFetchingAC(false))\r\n    }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { converterReducer } from \"./reducers/converterReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    converter: converterReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nexport type RootStoreType = ReturnType<typeof rootReducer>\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}